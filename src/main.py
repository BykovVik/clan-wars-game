from bot import app
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from pyrogram import filters
from game import GameController
import requests


# start command handler
@app.on_message(filters.command(["start"]))
async def start_command(client, message):
    # check chat status
    if message.chat.type.name == "PRIVATE":
        web_app_url = "https://bykovvik.github.io/clan-wars-twa-gitpage"
        keyboard = InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        text="Open Web App", 
                        web_app=WebAppInfo(url=web_app_url)
                    )
                ]
            ]
        )
        await message.reply("Click the button below to open the Web App:", reply_markup=keyboard)
    else:
        button_reg_clan = InlineKeyboardButton(
            "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —á–∞—Ç –≤ –∏–≥—Ä–µ",
            callback_data="clan_reg"
        )
        keyboard = InlineKeyboardMarkup([
            
            [button_reg_clan]
        ])
        # message reply
        await message.reply_text(
            "–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –∏–≥—Ä–µ, –≤–∞—à —á–∞—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å—Ä–∞–∂–µ–Ω–∏–π –∏ –≤–∞—Å –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å –Ω–∞ –±–∏—Ç–≤—É –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫.üëäüèª ",
            reply_markup=keyboard
        )


# help command handler
@app.on_message(filters.command(["help"]))
async def help_command(client, message):

    if not message.chat.type.name == "PRIVATE":
        pass
    else:
        pass


@app.on_callback_query()
async def callback_answers(client, callback_query):
    if callback_query.data == 'clan_reg':
        chat_id = int(callback_query.message.chat.id)
        chat_title = str(callback_query.message.chat.title)
        requests.post("http://127.0.0.1:8000/clan/", json={
            "title": chat_title,
            "chat_id": chat_id,
            "wins": 0,
            "losses": 0,
        })
        await callback_query.answer("–ö–ª–∞–Ω –≤–∞—à–µ–≥–æ —á–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")
        await client.delete_messages(
            callback_query.message.chat.id,
            callback_query.message.id
        )

    if callback_query.data.split(":")[0] == 'no_battle':
        await callback_query.answer("–í–∞–º –æ—Ç–∫–∞–∑–∞–ª–∏")
        await client.delete_messages(
            callback_query.message.chat.id,
            callback_query.message.id
        )
        await client.send_message(callback_query.from_user.id,
            "–ö–ª–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –≤—ã–∑—ã–≤–∞–ª–∏, –æ—Ç–∫–∞–∑–∞–ª –≤–∞–º –≤ –±–∏—Ç–≤–µ")
        




    """game = GameController(
        attacking_clan_id,
        defending_clan_id,
        client
        )
    await game.start_game()"""
        


# info command handler
"""@app.on_message(filters.command(["info"]))
async def info_command(client, message):
    # check chat status
    if not message.chat.type.name == "PRIVATE":
        # create button
        button_rules = InlineKeyboardButton(
            "–ü—Ä–æ—á–∏—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã",
            callback_data="rules_of_the_game"
        )
        button_account = InlineKeyboardButton(
            "–ê–∫–∫–∞—É–Ω—Ç",
            callback_data="account"
        )
        button_clan_info = InlineKeyboardButton(
            "–ù–∞—à –∫–ª–∞–Ω",
            callback_data="clan"
        )
        button_clan_rate = InlineKeyboardButton(
            "–†–µ–π—Ç–∏–Ω–≥ –∫–ª–∞–Ω–æ–≤",
            callback_data="clan_rate"
        )
        keyboard = InlineKeyboardMarkup([
            [button_rules], 
            [button_account], 
            [button_clan_info],
            [button_clan_rate]
        ])
        # message reply
        await message.reply_text(
            "–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–∏—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏–≥—Ä—ã, –∞ —Ç–∞–∫ –∂–µ"
            "—Å —Ç–µ–∫—É—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Å–≤–æ–µ–≥–æ –∏–≥—Ä–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ üëäüèª ",
            reply_markup=keyboard
        )
        

@app.on_message(filters.regex(r"^/check"))
async def text_handler(client, message):
    # ckeck other clans command hendler
    if message.chat.type.name != "PRIVATE":
        # create main objects
        clan_controller = ClanController(message.chat.id)
        clan = clan_controller.get_clan()
        if len(message.text) == 6:
            # message reply
            return await message.reply_text(
                "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É `/check`, –∞ –∑–∞"
                "–Ω–µ–π –≤–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞, —Å –∫–æ—Ç–æ—Ä—ã–º –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å—Ä–∞–∑–∏—Ç—å—Å—è. "
                "–ï—Å–ª–∏ —Ç–∞–∫–æ–π —á–∞—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª —Å–≤–æ–π –ö–õ–ê–ù –≤ –∏–≥—Ä–µ, —Ç–æ "
                "–ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ö–õ–ê–ù–ê –¥–ª—è –∏–≥—Ä—ã —Å –ö–õ–ê–ù–æ–º, –≤ "
                "–∫–æ—Ç–æ—Ä–æ–º —Å–æ—Å—Ç–æ–∏—Ç–µ –≤—ã"
            )

        if clan is None:
            # message reply
            return await message.reply_text(
                "–ö–õ–ê–ù —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–∞–π–¥–µ–Ω"
                "–∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –∏–≥—Ä–µ, –æ–¥–Ω–∞–∫–æ –≤ –≤–∞—à–µ–º —á–∞—Ç–µ –ù–ï —Å–æ–∑–¥–∞–Ω –∫–ª–∞–Ω, "
                "–Ω–∞–∂–º–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É `/start` –∏ —Å–ª–µ–¥—É–π—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º"
            )

        title = message.text[7:]

        if title == clan.title:
            # message reply
            return await message.reply_text(
                "–ù–µ–ª—å–∑—è –≤—ã–∑–≤–∞—Ç—å –Ω–∞ –±–æ–π, —Å–≤–æ–π –∂–µ –ö–õ–ê–ù."
            )

        # Checking if the selected clan is busy playing
        check_war = clan_controller.get_clan_by_title(title)

        if check_war is None:
            # message reply
            await message.reply_text(
                "–ö–ª–∞–Ω —Å –ø–æ–¥–æ–±–Ω—ã–º –∏–º–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏"
                "–æ—à–∏–±–∫—É."
            )
        else:
            # create button
            button = InlineKeyboardButton(
                "–í—ã–∑–≤–∞—Ç—å –ö–õ–ê–ù",
                callback_data="battle_{}".format(check_war.chat_id)
            )
            keyboard = InlineKeyboardMarkup([[button]])
            # message reply`
            await message.reply_text(
                "–ö–õ–ê–ù —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–∞–π–¥–µ–Ω –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –∏–≥—Ä–µ, —Ö–æ—Ç–∏—Ç–µ"
                "–±—Ä–æ—Å–∏—Ç—å –µ–º—É –≤—ã–∑–æ–≤? üëäüèª ",
                reply_markup=keyboard
            )


@app.on_callback_query()
async def callback_answers(client, callback_query):

    # create main objects
    clan_controller = ClanController(callback_query.message.chat.id)
    clan = clan_controller.get_clan()
    user_controller = UserController(callback_query.from_user.id)
    user = user_controller.get_user()

    # add clan query
    if callback_query.data == 'add_clan':
        if clan is None:
            clan_controller.add_clan(
                title=callback_query.message.chat.title,
                chat_id=callback_query.message.chat.id,
                wins=0,
                losses=0,
                rating=0
            )
            await callback_query.answer("–ö–ª–∞–Ω –≤–∞—à–µ–≥–æ —á–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")
            await client.delete_messages(
                callback_query.message.chat.id,
                callback_query.message.id
            )
        else:
            await callback_query.answer("–£ –≤–∞—Å —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ö–õ–ê–ù")
            await client.delete_messages(
                callback_query.message.chat.id,
                callback_query.message.id
            )

    # add player query
    if callback_query.data == 'add_player':
        if user is None:
            user_controller.add_user(
                name=callback_query.from_user.first_name,
                user_id=callback_query.from_user.id,
                clan_id=clan.id,
                clan=clan
            )
            await callback_query.answer(
                "–¢–µ–ø–µ—Ä—å –≤—ã –∏–≥—Ä–∞–µ—Ç–µ –∑–∞ —á–∞—Ç –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å"
            )
            await client.delete_messages(
                callback_query.message.chat.id,
                callback_query.message.id
            )
        else:
            await callback_query.answer(
                "–í—ã —É–∂–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ö–õ–ê–ù–∞"
            )
            await client.delete_messages(
                callback_query.message.chat.id,
                callback_query.message.id
            )

    # delete player query
    if callback_query.data == 'delete_player' and user is not None:
        if user is not None:
            await callback_query.answer("–£–¥–∞–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞")
            await client.delete_messages(
                callback_query.message.chat.id,
                callback_query.message.id
            )
            user_controller.delete_user()
        else:
            await callback_query.answer(
                "–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –∏–≥—Ä–µ"
            )
            await client.delete_messages(
                callback_query.message.chat.id,
                callback_query.message.id
            )

    # rules of the game query
    if callback_query.data == 'rules_of_the_game':
        await callback_query.answer("–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã")
        await client.delete_messages(
            callback_query.message.chat.id,
            callback_query.message.id
        )
        await client.send_message(
            callback_query.message.chat.id,
            "–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã"
        )

    # rules of the game query
    if callback_query.data == 'account':
        if user is None:
            await callback_query.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –∏–≥—Ä–µ")
            await client.delete_messages(
                callback_query.message.chat.id,
                callback_query.message.id
            )
            await client.send_message(
                callback_query.message.chat.id,
                "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –∑–∞—Ä–∫–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –∏–≥—Ä–µ, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ"
                "–≤—ã–±—Ä–∞—Ç—å —á–∞—Ç –∑–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–≥—Ä–∞—Ç—å, –≤—ã–∑–≤–∞—Ç—å –≤ –Ω—ë–º "
                "–∫–æ–º–∞–Ω–¥—É `/help`, –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–µ–≥–æ —é–∑–µ—Ä–∞ –≤ –∏–≥—Ä–µ."
            )
        else:
            await callback_query.answer("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∏–≥—Ä–æ–∫–µ")
            await client.delete_messages(
                callback_query.message.chat.id,
                callback_query.message.id
            )
            await client.send_message(
                callback_query.message.chat.id,
                "–Æ–∑–µ—Ä –∏–Ω—Ñ–æ"
            )
        
    # clan query
    if callback_query.data == 'clan':
        if user is None:
            await callback_query.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –∏–≥—Ä–µ")
            await client.delete_messages(
                callback_query.message.chat.id,
                callback_query.message.id
            )
            await client.send_message(
                callback_query.message.chat.id,
                "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –∑–∞—Ä–∫–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –∏–≥—Ä–µ, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ"
                "–≤—ã–±—Ä–∞—Ç—å —á–∞—Ç –∑–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–≥—Ä–∞—Ç—å, –≤—ã–∑–≤–∞—Ç—å –≤ –Ω—ë–º "
                "–∫–æ–º–∞–Ω–¥—É `/help`, –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–µ–≥–æ —é–∑–µ—Ä–∞ –≤ –∏–≥—Ä–µ."
            )
        else:
            if clan:
                await callback_query.answer("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ö–õ–ê–ù–ï")
                await client.delete_messages(
                    callback_query.message.chat.id,
                    callback_query.message.id
                )
                await client.send_message(
                    callback_query.message.chat.id,
                    "–ù–∞–∑–≤–∞–Ω–∏–µ: {} \n"
                    "–ü–æ–±–µ–¥—ã: {} \n"
                    "–ü–æ—Ä–∞–∂–µ–Ω–∏—è: {} \n"
                    "–†–µ–π—Ç–∏–Ω–≥: {} \n"
                    .format(clan.title, clan.wins, clan.losses, clan.rating)
                )
            else:
                await callback_query.answer("–ö–õ–ê–ù –Ω–µ –∑–∞—Ä–µ–≥–∞–Ω")

    # clan rating query
    if callback_query.data == 'clan_rate':
        if user is None:
            await callback_query.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –∏–≥—Ä–µ")
            await client.delete_messages(
                callback_query.message.chat.id,
                callback_query.message.id
            )
            await client.send_message(
                callback_query.message.chat.id,
                "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –∑–∞—Ä–∫–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –∏–≥—Ä–µ, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ"
                "–≤—ã–±—Ä–∞—Ç—å —á–∞—Ç –∑–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–≥—Ä–∞—Ç—å, –≤—ã–∑–≤–∞—Ç—å –≤ –Ω—ë–º "
                "–∫–æ–º–∞–Ω–¥—É `/help`, –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–µ–≥–æ —é–∑–µ—Ä–∞ –≤ –∏–≥—Ä–µ."
            )
        else:
            if clan:
                await callback_query.answer("–†–µ–π—Ç–∏–Ω–≥ –∫–ª–∞–Ω–æ–≤")
                await client.delete_messages(
                    callback_query.message.chat.id,
                    callback_query.message.id
                )
                # create rating
                clans = clan_controller.get_all_clans()
                rating = sorted(clans, key=lambda clan: clan.rating)
                message_text = ""
                count = 0
                for c in reversed(rating):
                    if count <= 10:
                        message_text += "{} : {} \n".format(c.title, c.rating)
                        count += 1

                await client.send_message(
                    callback_query.message.chat.id,
                    message_text
                )
            else:
                await callback_query.answer("–ö–õ–ê–ù –Ω–µ –∑–∞—Ä–µ–≥–∞–Ω")
    
    # start battle
    if callback_query.data[:6] == "battle":
        if user is not None:
            if user.clan_id == clan.id:
                # calculating id
                defending_clan_id = callback_query.data[7:]
                attacking_clan_id = callback_query.message.chat.id
                # callback answer
                await callback_query.answer("–ó–∞–ø—Ä–æ—Å –Ω–∞ –±–∏—Ç–≤—É")
                await client.delete_messages(
                    callback_query.message.chat.id,
                    callback_query.message.id
                )
                # reate new game
                game = GameController(
                    attacking_clan_id,
                    defending_clan_id,
                    client
                )
                await game.start_game()
            else:
                await callback_query.answer(
                    "–í—ã –Ω–µ –º–æ–∂–∏—Ç–µ –ø—Ä–æ—è–≤–ª—è—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —á–∞—Ç–µ, –∑–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã "
                    "–Ω–µ –∏–≥—Ä–∞–µ—Ç–µ!"
                )
        else:
            await callback_query.answer(
                "–í—ã –Ω–µ –º–æ–∂–∏—Ç–µ –ø—Ä–æ—è–≤–ª—è—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ "
                "–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –∏–≥—Ä–µ"
            )
            await client.delete_messages(
                callback_query.message.chat.id,
                callback_query.message.id
            )"""

app.run()
